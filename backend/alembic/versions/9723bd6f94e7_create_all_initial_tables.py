"""Create all initial tables

Revision ID: 9723bd6f94e7
Revises: 
Create Date: 2025-07-10 21:54:10.931127

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9723bd6f94e7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('positions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='岗位名称'),
    sa.Column('category', sa.String(length=50), nullable=False, comment='岗位类别: 技术岗/产品岗/运维岗'),
    sa.Column('industry', sa.String(length=50), nullable=False, comment='技术领域: AI/大数据/物联网/智能系统'),
    sa.Column('description', sa.Text(), nullable=True, comment='岗位描述'),
    sa.Column('required_skills', sa.JSON(), nullable=True, comment='必需技能列表'),
    sa.Column('preferred_skills', sa.JSON(), nullable=True, comment='优选技能列表'),
    sa.Column('interview_duration', sa.Integer(), nullable=True, comment='面试时长(分钟)'),
    sa.Column('question_count', sa.Integer(), nullable=True, comment='题目数量'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_positions_id'), 'positions', ['id'], unique=False)
    op.create_table('question_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_question_categories_id'), 'question_categories', ['id'], unique=False)
    op.create_table('questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('sub_category', sa.String(length=100), nullable=True),
    sa.Column('difficulty', sa.String(length=20), nullable=False),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('answer', sa.Text(), nullable=False),
    sa.Column('key_points', sa.Text(), nullable=True),
    sa.Column('related_topics', sa.Text(), nullable=True),
    sa.Column('interviewer_perspective', sa.Text(), nullable=True),
    sa.Column('views', sa.Integer(), nullable=True),
    sa.Column('stars', sa.Integer(), nullable=True),
    sa.Column('difficulty_votes', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_questions_category'), 'questions', ['category'], unique=False)
    op.create_index(op.f('ix_questions_id'), 'questions', ['id'], unique=False)
    op.create_index(op.f('ix_questions_title'), 'questions', ['title'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('interview_statistics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('total_interviews', sa.Integer(), nullable=True),
    sa.Column('total_practice', sa.Integer(), nullable=True),
    sa.Column('total_simulation', sa.Integer(), nullable=True),
    sa.Column('total_time_minutes', sa.Integer(), nullable=True),
    sa.Column('avg_overall_score', sa.Float(), nullable=True),
    sa.Column('avg_professional_score', sa.Float(), nullable=True),
    sa.Column('avg_expression_score', sa.Float(), nullable=True),
    sa.Column('avg_logic_score', sa.Float(), nullable=True),
    sa.Column('avg_adaptability_score', sa.Float(), nullable=True),
    sa.Column('avg_professionalism_score', sa.Float(), nullable=True),
    sa.Column('score_improvement', sa.Float(), nullable=True),
    sa.Column('better_than_percent', sa.Float(), nullable=True),
    sa.Column('last_interview_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_interview_statistics_id'), 'interview_statistics', ['id'], unique=False)
    op.create_table('interview_trend_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('record_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('daily_score', sa.Float(), nullable=True),
    sa.Column('interviews_count', sa.Integer(), nullable=True),
    sa.Column('cumulative_avg_score', sa.Float(), nullable=True),
    sa.Column('professional_score', sa.Float(), nullable=True),
    sa.Column('expression_score', sa.Float(), nullable=True),
    sa.Column('logic_score', sa.Float(), nullable=True),
    sa.Column('adaptability_score', sa.Float(), nullable=True),
    sa.Column('professionalism_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_interview_trend_data_id'), 'interview_trend_data', ['id'], unique=False)
    op.create_table('interviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('position', sa.String(length=100), nullable=False),
    sa.Column('company_type', sa.String(length=50), nullable=True),
    sa.Column('difficulty', sa.String(length=20), nullable=True),
    sa.Column('planned_duration', sa.Integer(), nullable=False),
    sa.Column('question_types', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('actual_duration', sa.Integer(), nullable=True),
    sa.Column('total_questions', sa.Integer(), nullable=False),
    sa.Column('answered_questions', sa.Integer(), nullable=False),
    sa.Column('overall_score', sa.Float(), nullable=True),
    sa.Column('professional_score', sa.Float(), nullable=True),
    sa.Column('expression_score', sa.Float(), nullable=True),
    sa.Column('logic_score', sa.Float(), nullable=True),
    sa.Column('adaptability_score', sa.Float(), nullable=True),
    sa.Column('professionalism_score', sa.Float(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('finished_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_interviews_id'), 'interviews', ['id'], unique=False)
    op.create_table('resumes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('stored_filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.BigInteger(), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_parsed', sa.Boolean(), nullable=True),
    sa.Column('parsed_content', sa.Text(), nullable=True),
    sa.Column('parsed_data', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_resumes_id'), 'resumes', ['id'], unique=False)
    op.create_table('user_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('graduation_year', sa.String(), nullable=True),
    sa.Column('education', sa.String(), nullable=True),
    sa.Column('school', sa.String(), nullable=True),
    sa.Column('major', sa.String(), nullable=True),
    sa.Column('major_category', sa.String(), nullable=True),
    sa.Column('target_position', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_profiles_id'), 'user_profiles', ['id'], unique=False)
    op.create_table('user_question_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('is_viewed', sa.Boolean(), nullable=True),
    sa.Column('is_collected', sa.Boolean(), nullable=True),
    sa.Column('is_mastered', sa.Boolean(), nullable=True),
    sa.Column('practice_count', sa.Integer(), nullable=True),
    sa.Column('last_practiced_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_question_progress_id'), 'user_question_progress', ['id'], unique=False)
    op.create_table('interview_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('interview_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('question_type', sa.String(length=50), nullable=True),
    sa.Column('difficulty', sa.String(length=20), nullable=True),
    sa.Column('order_index', sa.Integer(), nullable=False),
    sa.Column('answer_text', sa.Text(), nullable=True),
    sa.Column('answer_duration', sa.Integer(), nullable=True),
    sa.Column('audio_file_path', sa.String(length=500), nullable=True),
    sa.Column('video_file_path', sa.String(length=500), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('ai_feedback', sa.Text(), nullable=True),
    sa.Column('keyword_match', sa.Float(), nullable=True),
    sa.Column('fluency_score', sa.Float(), nullable=True),
    sa.Column('is_skipped', sa.Boolean(), nullable=True),
    sa.Column('hint_used', sa.Boolean(), nullable=True),
    sa.Column('asked_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('answered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['interview_id'], ['interviews.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_interview_questions_id'), 'interview_questions', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_interview_questions_id'), table_name='interview_questions')
    op.drop_table('interview_questions')
    op.drop_index(op.f('ix_user_question_progress_id'), table_name='user_question_progress')
    op.drop_table('user_question_progress')
    op.drop_index(op.f('ix_user_profiles_id'), table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_index(op.f('ix_resumes_id'), table_name='resumes')
    op.drop_table('resumes')
    op.drop_index(op.f('ix_interviews_id'), table_name='interviews')
    op.drop_table('interviews')
    op.drop_index(op.f('ix_interview_trend_data_id'), table_name='interview_trend_data')
    op.drop_table('interview_trend_data')
    op.drop_index(op.f('ix_interview_statistics_id'), table_name='interview_statistics')
    op.drop_table('interview_statistics')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_questions_title'), table_name='questions')
    op.drop_index(op.f('ix_questions_id'), table_name='questions')
    op.drop_index(op.f('ix_questions_category'), table_name='questions')
    op.drop_table('questions')
    op.drop_index(op.f('ix_question_categories_id'), table_name='question_categories')
    op.drop_table('question_categories')
    op.drop_index(op.f('ix_positions_id'), table_name='positions')
    op.drop_table('positions')
    # ### end Alembic commands ###
